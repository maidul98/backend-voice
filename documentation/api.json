{
  "definitions": {
    "User": {
      "title": "User",
      "required": [
        "username",
        "email"
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "hash": {
          "type": "string"
        },
        "salt": {
          "type": "string"
        },
        "verified": {
          "type": "boolean"
        },
        "suspended": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "img_location": {
          "type": "string"
        },
        "_id": {
          "type": "string"
        }
      }
    },
    "Post": {
      "title": "Post",
      "required": [
        "user",
        "audio_key"
      ],
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "caption": {
          "type": "string"
        },
        "votes": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "comments_count": {
          "type": "number"
        },
        "audio_key": {
          "type": "string"
        },
        "_id": {
          "type": "string"
        },
        "audio_location": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "Vote": {
      "title": "Vote",
      "required": [
        "post"
      ],
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "post": {
          "type": "string"
        },
        "upvoters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "downvoters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "voteCounts": {
          "type": "number"
        },
        "_id": {
          "type": "string"
        }
      }
    }
  },
  "host": "localhost:3000",
  "info": {
    "title": "jwt-auth",
    "version": "1.0.0",
    "license": {
      "name": "ISC"
    },
    "description": "Specification JSONs: [v2](/api-spec/v2), [v3](/api-spec/v3)."
  },
  "paths": {
    "*": {
      "options": {
        "summary": "*",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {},
        "tags": []
      }
    },
    "/users/user": {
      "get": {
        "summary": "/users/user",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "verified": {
                  "type": "boolean",
                  "example": false
                },
                "suspended": {
                  "type": "boolean",
                  "example": false
                },
                "_id": {
                  "type": "string",
                  "example": "6009a830d3d378157dcd4320"
                },
                "username": {
                  "type": "string",
                  "example": "maidul98"
                },
                "hash": {
                  "type": "string",
                  "example": "75f7a95bf74e5e432bffc5910a980793bc7369f09bb05ae930ea139861fd98256905c42b52ab66a472e97d4c80a97928c20c9edc20e019c8f65a14ef2313cbd1"
                },
                "salt": {
                  "type": "string",
                  "example": "d8beb4864bb19099b3e21ff1d5f660695080873941e7c4d62f58dcabf8d12e9c"
                },
                "email": {
                  "type": "string",
                  "example": "maidul98@gmail.com"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-01-21T16:13:36.558Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/users/login": {
      "post": {
        "summary": "/users/login",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "maidul98"
                },
                "password": {
                  "type": "string",
                  "example": "******"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "verified": {
                      "type": "boolean",
                      "example": false
                    },
                    "suspended": {
                      "type": "boolean",
                      "example": false
                    },
                    "_id": {
                      "type": "string",
                      "example": "6009a830d3d378157dcd4320"
                    },
                    "username": {
                      "type": "string",
                      "example": "maidul98"
                    },
                    "hash": {
                      "type": "string",
                      "example": "75f7a95bf74e5e432bffc5910a980793bc7369f09bb05ae930ea139861fd98256905c42b52ab66a472e97d4c80a97928c20c9edc20e019c8f65a14ef2313cbd1"
                    },
                    "salt": {
                      "type": "string",
                      "example": "d8beb4864bb19099b3e21ff1d5f660695080873941e7c4d62f58dcabf8d12e9c"
                    },
                    "email": {
                      "type": "string",
                      "example": "maidul98@gmail.com"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-01-21T16:13:36.558Z"
                    },
                    "__v": {
                      "type": "number",
                      "example": 0
                    }
                  }
                },
                "token": {
                  "type": "string",
                  "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MDA5YTgzMGQzZDM3ODE1N2RjZDQzMjAiLCJpYXQiOjE2MTE0Mjg2OTI2OTgsImV4cCI6MTYxMTQyODc3OTA5OH0.NsaLLwwla_veHUfGodKrJs0kDL3RQb76T2K4HgY9I8RvGI-AAMnE71vBfAKil7BoYewTjDEWGdWVznpx5t6DMC_fpc0R8Gg3fPwsxnBtpixP06j_LPTocKiiqFA7nQc5aYiYbf7gHGFIV5PXPd5tySdQxFOlwdAA85KkW7d2WQTNfRwHn_IoDIM5_8XWlWq_WhezpjDVQgjohIL7e2VG-wtPQpg1V-uh-tMcDbQcFFzLadEaUQdjRQ0TtCsN2w0-TVozz-LDYd0tBt82dGJCeIW-IuARvT4flQhgAI432bKD3D4qfXGwnu0PZVtKguV1Rr5-vePXMBiRYhoIrmXM0N-rf4DoBy3O9wFFm3dld8suwC-c5l8Avl8hMRiL3lAWbsO7yIxgS9R6LiCafjl591ZDmE-Fbb096GjiH3YAlZ8ZZOmSPhori3kZaqqCKHgy6nG80zRAKJtr8l78yNt1xFx_8FEsE1c8vtwZtn6mDmi4DRj--on31DUsdg7AQ2xDvk95w-DHWOaOH0g4eQyiYG67jiWPPdIEGMri2q6fztEi8ycNuMPH6SbGurt0C6q9VInnQMhlBDV9x3Xjpe3tFaC1ISBz5bRJuuQGyEpGE-9bifYSN79cqamzXmrkF34hUx36-osQSQ3XKqh4_DciDcZU3a78xOmqA-NHciyLC00"
                },
                "expiresIn": {
                  "type": "string",
                  "example": "1d"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "msg": {
                  "type": "string",
                  "example": "You are not registered"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/users/register": {
      "post": {
        "summary": "/users/register",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "theflyingcat99"
                },
                "password": {
                  "type": "string",
                  "example": "******"
                },
                "email": {
                  "type": "string",
                  "example": "cat98@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "verified": {
                      "type": "boolean",
                      "example": false
                    },
                    "suspended": {
                      "type": "boolean",
                      "example": false
                    },
                    "img_location": {
                      "type": "string",
                      "example": "https://audio-social-network-profiles.s3.us-east-2.amazonaws.com/default.png"
                    },
                    "_id": {
                      "type": "string",
                      "example": "600e56752e03e63ed04b593e"
                    },
                    "username": {
                      "type": "string",
                      "example": "theflyingcat99"
                    },
                    "hash": {
                      "type": "string",
                      "example": "4a49c9a7d9cd817b141e611648b4883155c0c62109e07f1b7ea4ff153e0258aa1c5a61bcbc2c5a4d1819c3790e6d361cba2c9736286e4ef8fdbbf41e2473b433"
                    },
                    "salt": {
                      "type": "string",
                      "example": "65c8c49add62e51bcf4fd5de3706b4705fd15710794115cafce55045aaf7e3bd"
                    },
                    "email": {
                      "type": "string",
                      "example": "cat98@gmail.com"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-01-25T05:26:13.839Z"
                    },
                    "__v": {
                      "type": "number",
                      "example": 0
                    }
                  }
                },
                "token": {
                  "type": "string",
                  "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MDBlNTY3NTJlMDNlNjNlZDA0YjU5M2UiLCJpYXQiOjE2MTE1NTIzNzQyMDQsImV4cCI6MTYxMTU1MjQ2MDYwNH0.ylvV_ciuDxmVR-BiJM4xJdIkgFgD8D1r6qkO1te4I6MQTEGnUEt4rawboikdJ1e6fDU6cRfpsq4HMHHfb8TcwnpJGXMeM90KdlxqOuy4ZZUdxmosN1dNnxMjJhs0H4AToPlJK9WI1_2bk6FWi4U0Mxwh3ijXb1heaYDWtXrzqN_w06aJVL0-c-n8d3ZYOA0n2iyBBs_-MNVlv8zN5MHdMhX_HdB1JZ_xHmm6oqkUVrAadX_a_En9ywFkpwps_E161JemGMT3IqhVJOY7ol_qmrQGjEg30CGszgAYrNVc-hpffOQA04g5KoBjavxo2FLrVp1St43CrYjEoaI_PduDp5eaJWiBrNQDE5gqM2jhZJCKCGqRMvcx5gMC-DyOHWzL2bqnJOIcdF6WK7_1t_ZJCpA9emCmy9RBUbOYRUJg1LWhy4e9Tsg_5i1YNJJzfHz4QgkbZaSKt1hwsD5hP0lcEfo5IN0fq1AGJYA9rUye536th2SgU7XgnplUjlB3arNy6w1Nvv0OuocdfxE5q9Pu910v7c7CvPVaWbaDAKRPUyrECNzQjh7xJj8le1dOZ2yeQgiw9U3Ncrge36UMQ32U0E6LDVl73CCn43NdRrqqGfLfn_AcepUP6JoCGVhoHU-2-3eyUSxiRW1maEJV5jKHg0Qm3-UUt0m4ZlfyzwFQlS8"
                },
                "expiresIn": {
                  "type": "string",
                  "example": "1d"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Error, expected `username` to be unique. Value: `theflyingcat98`"
                        },
                        "name": {
                          "type": "string",
                          "example": "ValidatorError"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "example": "Error, expected `username` to be unique. Value: `theflyingcat98`"
                            },
                            "type": {
                              "type": "string",
                              "example": "unique"
                            },
                            "path": {
                              "type": "string",
                              "example": "username"
                            },
                            "value": {
                              "type": "string",
                              "example": "theflyingcat98"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "unique"
                        },
                        "path": {
                          "type": "string",
                          "example": "username"
                        },
                        "value": {
                          "type": "string",
                          "example": "theflyingcat98"
                        }
                      }
                    },
                    "email": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Error, expected `email` to be unique. Value: `cat98@gmail.com`"
                        },
                        "name": {
                          "type": "string",
                          "example": "ValidatorError"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "example": "Error, expected `email` to be unique. Value: `cat98@gmail.com`"
                            },
                            "type": {
                              "type": "string",
                              "example": "unique"
                            },
                            "path": {
                              "type": "string",
                              "example": "email"
                            },
                            "value": {
                              "type": "string",
                              "example": "cat98@gmail.com"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "unique"
                        },
                        "path": {
                          "type": "string",
                          "example": "email"
                        },
                        "value": {
                          "type": "string",
                          "example": "cat98@gmail.com"
                        }
                      }
                    }
                  }
                },
                "_message": {
                  "type": "string",
                  "example": "User validation failed"
                },
                "message": {
                  "type": "string",
                  "example": "User validation failed: username: Error, expected `username` to be unique. Value: `theflyingcat98`, email: Error, expected `email` to be unique. Value: `cat98@gmail.com`"
                },
                "name": {
                  "type": "string",
                  "example": "ValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Something went wrong, please try again"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/users/forgot": {
      "post": {
        "summary": "/users/forgot",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {},
        "tags": [
          "User"
        ]
      }
    },
    "/users/upload-profile-image": {
      "post": {
        "summary": "/users/upload-profile-image",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "profile_img",
            "required": "true",
            "description": "The image you want to upload. Allowed file types: .jpg, .png, .jpeg",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Your profile image has been updated"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Something went wrong, please try again"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "produces": [
          "application/json",
          "text/html"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/posts/single/{id}": {
      "get": {
        "summary": "/posts/single/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "the id of the post to be returned"
          }
        ],
        "responses": {},
        "tags": [
          "Post"
        ]
      }
    },
    "/posts/trending-posts": {
      "get": {
        "summary": "/posts/trending-posts",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "From where you want the next batch. The API gives you the first 10, if you want the next 10 then you must skip 10 to get 11th post and onward"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "comments_count": {
                    "type": "number"
                  },
                  "_id": {
                    "type": "string"
                  },
                  "caption": {
                    "type": "string"
                  },
                  "user": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "verified": {
                        "type": "boolean"
                      },
                      "suspended": {
                        "type": "boolean"
                      },
                      "_id": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  },
                  "audio_key": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "__v": {
                    "type": "number"
                  },
                  "votes": {
                    "type": "object",
                    "properties": {
                      "upvoters": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "downvoters": {
                        "type": "array",
                        "items": {}
                      },
                      "voteCounts": {
                        "type": "number"
                      },
                      "_id": {
                        "type": "string"
                      },
                      "post": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "__v": {
                        "type": "number"
                      }
                    }
                  }
                },
                "required": [
                  "comments_count",
                  "_id",
                  "caption",
                  "user",
                  "audio_key",
                  "createdAt",
                  "__v",
                  "votes"
                ]
              }
            }
          },
          "304": {}
        },
        "tags": [
          "Post"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/posts/new": {
      "post": {
        "summary": "/posts/new",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "audio_file",
            "required": true,
            "type": "file",
            "description": "The audio file to upload. Must be in mp3 format."
          },
          {
            "in": "body",
            "name": "caption",
            "required": true,
            "description": "The caption of the post",
            "schema": {
              "type": "object",
              "properties": {
                "caption": {
                  "type": "string",
                  "example": "This is a example caption"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "comments_count": {
                  "type": "number",
                  "example": 0
                },
                "_id": {
                  "type": "string",
                  "example": "600d10bfea27206a4550fac8"
                },
                "caption": {
                  "type": "string",
                  "example": "rant about ECE"
                },
                "user": {
                  "type": "string",
                  "example": "6009a830d3d378157dcd4320"
                },
                "audio_key": {
                  "type": "string",
                  "example": "1611468989411.mp3"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-01-24T06:16:31.019Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                },
                "votes": {
                  "type": "object",
                  "properties": {
                    "upvoters": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "6009a830d3d378157dcd4320"
                      ]
                    },
                    "downvoters": {
                      "type": "array",
                      "items": {},
                      "example": [
                        null
                      ]
                    },
                    "voteCounts": {
                      "type": "number",
                      "example": 1
                    },
                    "_id": {
                      "type": "string",
                      "example": "600d10bfea27206a4550fac9"
                    },
                    "post": {
                      "type": "string",
                      "example": "600d10bfea27206a4550fac8"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-01-24T06:16:31.060Z"
                    },
                    "__v": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Post"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/posts/audio/{audio_key}": {
      "get": {
        "summary": "/posts/audio/{audio_key}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "audio_key",
            "in": "path",
            "required": true,
            "description": "The audio_key of the post"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "type": "object",
            "schema": {
              "properties": {
                "audio_location": {
                  "type": "string",
                  "example": "https://audio-social-network.s3.us-east-2.amazonaws.com/1611466568998.mp3?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAI7KO3LWVULGZQIFA%2F20210125%2Fus-east-2%2Fs3%2Faws4_request&X-Amz-Date=20210125T032105Z&X-Amz-Expires=300&X-Amz-Signature=ca9ba5052332040af6475866478ebce7a3e2dfc9539898f91d94413ba5cb93d0&X-Amz-SignedHeaders=host"
                }
              }
            }
          }
        },
        "tags": [
          "Post"
        ],
        "description": "Will return a signed URL which will expire after some time",
        "security": [
          {
            "authorization": []
          }
        ]
      }
    },
    "/votes": {
      "post": {
        "summary": "/votes",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "type": "object",
            "schema": {
              "properties": {
                "voteType": {
                  "type": "string",
                  "example": "down",
                  "description": "You can send either 'up' or 'down' or '' to represent that the user removed his/her vote"
                },
                "postId": {
                  "type": "string",
                  "description": "The id of the post you want to vote on"
                }
              }
            },
            "description": "Cast a vote on a post"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "msg": {
                  "type": "string",
                  "example": "voted"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Vote"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "authorization": []
          }
        ]
      }
    }
  },
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "authorization": {
      "name": "authorization",
      "in": "header",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "name": "User"
    },
    {
      "name": "Post"
    },
    {
      "name": "Vote"
    }
  ]
}