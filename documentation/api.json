{
  "openapi": "3.0.0",
  "info": {
    "title": "Voice network API",
    "version": "1.0.0",
    "license": { "name": "ISC" },
    "description": ""
  },
  "paths": {
    "/users/user": {
      "get": {
        "summary": "/users/user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "verified": { "type": "boolean", "example": false },
                    "suspended": { "type": "boolean", "example": false },
                    "_id": {
                      "type": "string",
                      "example": "6009a830d3d378157dcd4320"
                    },
                    "username": { "type": "string", "example": "maidul98" },
                    "hash": {
                      "type": "string",
                      "example": "75f7a95bf74e5e432bffc5910a980793bc7369f09bb05ae930ea139861fd98256905c42b52ab66a472e97d4c80a97928c20c9edc20e019c8f65a14ef2313cbd1"
                    },
                    "salt": {
                      "type": "string",
                      "example": "d8beb4864bb19099b3e21ff1d5f660695080873941e7c4d62f58dcabf8d12e9c"
                    },
                    "email": {
                      "type": "string",
                      "example": "maidul98@gmail.com"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-01-21T16:13:36.558Z"
                    },
                    "__v": { "type": "number", "example": 0 }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["Profile"],
        "security": [{ "authorization": [] }]
      }
    },
    "/comments/{post_id}": {
      "post": {
        "description": "Post a comment",
        "summary": "Post a new comment",
        "parameters": [
          {
            "in": "path",
            "name": "post_id",
            "description": "ID of the post to comment on",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "body": { "type": "string", "example": "this a comment" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "repliesCount": {
                      "type": "number",
                      "example": 0
                    },
                    "_id": {
                      "type": "string",
                      "example": "60136bb4a4723b3242f748e0"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-01-29T01:58:12.381Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2021-01-29T01:58:12.381Z"
                    },
                    "body": {
                      "type": "string",
                      "example": "maidul98"
                    },
                    "post": {
                      "type": "string",
                      "example": "600fae1ed984192830e4474d"
                    },
                    "user": {
                      "required": [
                        "verified",
                        "img_location",
                        "_id",
                        "username",
                        "createdAt",
                        "__v"
                      ],
                      "properties": {
                        "verified": {
                          "type": "boolean",
                          "example": false
                        },
                        "img_location": {
                          "type": "string",
                          "example": "https://audio-social-network-profiles.s3.us-east-2.amazonaws.com/1611807455351.jpg"
                        },
                        "_id": {
                          "type": "string",
                          "example": "600fadc1d984192830e4473a"
                        },
                        "username": {
                          "type": "string",
                          "example": "maidul98"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2021-01-26T05:50:57.746Z"
                        },
                        "__v": {
                          "type": "number",
                          "example": 0
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "required": ["body"],
                      "properties": {
                        "body": {
                          "required": [
                            "message",
                            "name",
                            "properties",
                            "kind",
                            "path"
                          ],
                          "properties": {
                            "message": {
                              "type": "string",
                              "example": "Comment cannot be empty"
                            },
                            "name": {
                              "type": "string",
                              "example": "ValidatorError"
                            },
                            "properties": {
                              "required": ["message", "type", "path"],
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "example": "Comment cannot be empty"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "required"
                                },
                                "path": {
                                  "type": "string",
                                  "example": "body"
                                }
                              },
                              "type": "object"
                            },
                            "kind": {
                              "type": "string",
                              "example": "required"
                            },
                            "path": {
                              "type": "string",
                              "example": "body"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "_message": {
                      "type": "string",
                      "example": "Comment validation failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Comment validation failed: body: Comment cannot be empty"
                    },
                    "name": {
                      "type": "string",
                      "example": "ValidationError"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Something went wrong, please try again"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Comment"],
        "security": [{ "authorization": [] }]
      }
    },
    "/comments/new/{post_id}": {
      "get": {
        "summary": "Get a list of comments of a post ordered by time: newest first",
        "parameters": [
          {
            "in": "path",
            "name": "post_id",
            "description": "ID of the post",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "skip",
            "description": "How many to skip before returning the next batch. You get 10 comments with skip = 0, to get the next 10, set skip=10..."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of comments"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Something went wrong, please try again"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Comment"],
        "security": [{ "authorization": [] }]
      }
    },
    "/comments/{comment_id}": {
      "put": {
        "tags": ["Comment"],
        "security": [{ "authorization": [] }]
      }
    },
    "/comments/all/{post_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "post_id",
            "description": "ID of the post",
            "schema": { "type": "string" }
          }
        ],
        "tags": ["Comment"]
      }
    },
    "/replies/{id}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the Comment or the Reply to respond to",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "string",
                    "example": "this is a comment",
                    "description": "The text of the response"
                  },
                  "response_type": {
                    "type": "stirng",
                    "example": "comment",
                    "description": "You can respond to a Comment or a Reply. Specify either 'comment' or 'reply'"
                  }
                }
              }
            }
          }
        },
        "tags": ["Replies"],
        "security": [{ "authorization": [] }]
      }
    },
    "/posts/delete/{id}": {
      "delete": {
        "description": "Soft deletes the users post",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the post to edit",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Your post has been deleted"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Couldn't delete your post, please try again"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Post"],
        "security": [{ "authorization": [] }]
      }
    },
    "/posts/edit/{id}": {
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the post to edit",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_caption": {
                    "type": "string",
                    "example": "this is a new caption"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Your post has been updated"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Couldn't update your post, please try again"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Post not found"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Post"],
        "security": [{ "authorization": [] }]
      }
    },
    "/users/login": {
      "post": {
        "summary": "/users/login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string", "example": "maidul98" },
                  "password": { "type": "string", "example": "******" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "user": {
                      "type": "object",
                      "properties": {
                        "verified": { "type": "boolean", "example": false },
                        "suspended": { "type": "boolean", "example": false },
                        "_id": {
                          "type": "string",
                          "example": "6009a830d3d378157dcd4320"
                        },
                        "username": { "type": "string", "example": "maidul98" },
                        "hash": {
                          "type": "string",
                          "example": "75f7a95bf74e5e432bffc5910a980793bc7369f09bb05ae930ea139861fd98256905c42b52ab66a472e97d4c80a97928c20c9edc20e019c8f65a14ef2313cbd1"
                        },
                        "salt": {
                          "type": "string",
                          "example": "d8beb4864bb19099b3e21ff1d5f660695080873941e7c4d62f58dcabf8d12e9c"
                        },
                        "email": {
                          "type": "string",
                          "example": "maidul98@gmail.com"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2021-01-21T16:13:36.558Z"
                        },
                        "__v": { "type": "number", "example": 0 }
                      }
                    },
                    "token": {
                      "type": "string",
                      "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MDA5YTgzMGQzZDM3ODE1N2RjZDQzMjAiLCJpYXQiOjE2MTE0Mjg2OTI2OTgsImV4cCI6MTYxMTQyODc3OTA5OH0.NsaLLwwla_veHUfGodKrJs0kDL3RQb76T2K4HgY9I8RvGI-AAMnE71vBfAKil7BoYewTjDEWGdWVznpx5t6DMC_fpc0R8Gg3fPwsxnBtpixP06j_LPTocKiiqFA7nQc5aYiYbf7gHGFIV5PXPd5tySdQxFOlwdAA85KkW7d2WQTNfRwHn_IoDIM5_8XWlWq_WhezpjDVQgjohIL7e2VG-wtPQpg1V-uh-tMcDbQcFFzLadEaUQdjRQ0TtCsN2w0-TVozz-LDYd0tBt82dGJCeIW-IuARvT4flQhgAI432bKD3D4qfXGwnu0PZVtKguV1Rr5-vePXMBiRYhoIrmXM0N-rf4DoBy3O9wFFm3dld8suwC-c5l8Avl8hMRiL3lAWbsO7yIxgS9R6LiCafjl591ZDmE-Fbb096GjiH3YAlZ8ZZOmSPhori3kZaqqCKHgy6nG80zRAKJtr8l78yNt1xFx_8FEsE1c8vtwZtn6mDmi4DRj--on31DUsdg7AQ2xDvk95w-DHWOaOH0g4eQyiYG67jiWPPdIEGMri2q6fztEi8ycNuMPH6SbGurt0C6q9VInnQMhlBDV9x3Xjpe3tFaC1ISBz5bRJuuQGyEpGE-9bifYSN79cqamzXmrkF34hUx36-osQSQ3XKqh4_DciDcZU3a78xOmqA-NHciyLC00"
                    },
                    "expiresIn": { "type": "string", "example": "1d" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "msg": {
                      "type": "string",
                      "example": "You are not registered"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Authentication"]
      }
    },
    "/users/register": {
      "post": {
        "summary": "/users/register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string", "example": "theflyingcat99" },
                  "password": { "type": "string", "example": "******" },
                  "email": { "type": "string", "example": "cat98@gmail.com" }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "user": {
                      "type": "object",
                      "properties": {
                        "verified": { "type": "boolean", "example": false },
                        "suspended": { "type": "boolean", "example": false },
                        "img_location": {
                          "type": "string",
                          "example": "https://audio-social-network-profiles.s3.us-east-2.amazonaws.com/default.png"
                        },
                        "_id": {
                          "type": "string",
                          "example": "600e56752e03e63ed04b593e"
                        },
                        "username": {
                          "type": "string",
                          "example": "theflyingcat99"
                        },
                        "hash": {
                          "type": "string",
                          "example": "4a49c9a7d9cd817b141e611648b4883155c0c62109e07f1b7ea4ff153e0258aa1c5a61bcbc2c5a4d1819c3790e6d361cba2c9736286e4ef8fdbbf41e2473b433"
                        },
                        "salt": {
                          "type": "string",
                          "example": "65c8c49add62e51bcf4fd5de3706b4705fd15710794115cafce55045aaf7e3bd"
                        },
                        "email": {
                          "type": "string",
                          "example": "cat98@gmail.com"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2021-01-25T05:26:13.839Z"
                        },
                        "__v": { "type": "number", "example": 0 }
                      }
                    },
                    "token": {
                      "type": "string",
                      "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2MDBlNTY3NTJlMDNlNjNlZDA0YjU5M2UiLCJpYXQiOjE2MTE1NTIzNzQyMDQsImV4cCI6MTYxMTU1MjQ2MDYwNH0.ylvV_ciuDxmVR-BiJM4xJdIkgFgD8D1r6qkO1te4I6MQTEGnUEt4rawboikdJ1e6fDU6cRfpsq4HMHHfb8TcwnpJGXMeM90KdlxqOuy4ZZUdxmosN1dNnxMjJhs0H4AToPlJK9WI1_2bk6FWi4U0Mxwh3ijXb1heaYDWtXrzqN_w06aJVL0-c-n8d3ZYOA0n2iyBBs_-MNVlv8zN5MHdMhX_HdB1JZ_xHmm6oqkUVrAadX_a_En9ywFkpwps_E161JemGMT3IqhVJOY7ol_qmrQGjEg30CGszgAYrNVc-hpffOQA04g5KoBjavxo2FLrVp1St43CrYjEoaI_PduDp5eaJWiBrNQDE5gqM2jhZJCKCGqRMvcx5gMC-DyOHWzL2bqnJOIcdF6WK7_1t_ZJCpA9emCmy9RBUbOYRUJg1LWhy4e9Tsg_5i1YNJJzfHz4QgkbZaSKt1hwsD5hP0lcEfo5IN0fq1AGJYA9rUye536th2SgU7XgnplUjlB3arNy6w1Nvv0OuocdfxE5q9Pu910v7c7CvPVaWbaDAKRPUyrECNzQjh7xJj8le1dOZ2yeQgiw9U3Ncrge36UMQ32U0E6LDVl73CCn43NdRrqqGfLfn_AcepUP6JoCGVhoHU-2-3eyUSxiRW1maEJV5jKHg0Qm3-UUt0m4ZlfyzwFQlS8"
                    },
                    "expiresIn": { "type": "string", "example": "1d" }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "example": "Error, expected `username` to be unique. Value: `theflyingcat98`"
                            },
                            "name": {
                              "type": "string",
                              "example": "ValidatorError"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "example": "Error, expected `username` to be unique. Value: `theflyingcat98`"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "unique"
                                },
                                "path": {
                                  "type": "string",
                                  "example": "username"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "theflyingcat98"
                                }
                              }
                            },
                            "kind": { "type": "string", "example": "unique" },
                            "path": { "type": "string", "example": "username" },
                            "value": {
                              "type": "string",
                              "example": "theflyingcat98"
                            }
                          }
                        },
                        "email": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "example": "Error, expected `email` to be unique. Value: `cat98@gmail.com`"
                            },
                            "name": {
                              "type": "string",
                              "example": "ValidatorError"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "example": "Error, expected `email` to be unique. Value: `cat98@gmail.com`"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "unique"
                                },
                                "path": {
                                  "type": "string",
                                  "example": "email"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "cat98@gmail.com"
                                }
                              }
                            },
                            "kind": { "type": "string", "example": "unique" },
                            "path": { "type": "string", "example": "email" },
                            "value": {
                              "type": "string",
                              "example": "cat98@gmail.com"
                            }
                          }
                        }
                      }
                    },
                    "_message": {
                      "type": "string",
                      "example": "User validation failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "User validation failed: username: Error, expected `username` to be unique. Value: `theflyingcat98`, email: Error, expected `email` to be unique. Value: `cat98@gmail.com`"
                    },
                    "name": { "type": "string", "example": "ValidationError" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Something went wrong, please try again"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Authentication"]
      }
    },
    "/users/password-reset/{token}": {
      "post": {
        "summary": "/users/password-reset/{token}",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "description": "The token that was sent to the user for reseting their password",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "new_password": { "type": "string", "example": "123" }
                }
              }
            }
          },
          "required": "true"
        },
        "responses": {
          "410": {
            "description": "Gone",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Password reset token is invalid or has expired."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Authentication"],
        "description": ""
      }
    },
    "/users/request-password-reset/{username}": {
      "put": {
        "summary": "/users/request-password-reset/{username}",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "The username of the user who whishes to reset his/her password",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "If an account exists with this username, an email will be sent shorty"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Authentication"],
        "description": "Once the user requests a password reset, the user will be sent a email. The email will conatin a link to reset the password which will expire in one hour."
      }
    },
    "/users/upload-profile-image": {
      "post": {
        "summary": "/users/upload-profile-image",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "profile_img": {
                    "description": "The image you want to upload. Allowed file types: .jpg, .png, .jpeg",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Your profile image has been updated"
                    }
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Your profile image has been updated"
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Only .jpg, .png and .jpeg allowed"
                    }
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Only .jpg, .png and .jpeg allowed"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Profile"],
        "security": [{ "authorization": [] }]
      }
    },
    "/posts/single/{id}": {
      "get": {
        "summary": "/posts/single/{id}",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "the id of the post to be returned",
            "schema": { "type": "string" }
          }
        ],
        "responses": {},
        "tags": ["Post"]
      }
    },
    "/posts/trending-posts": {
      "get": {
        "summary": "/posts/trending-posts",
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "From where you want the next batch. The API gives you the first 10, if you want the next 10 then you must skip 10 to get 11th post and onward",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comments_count": { "type": "number" },
                      "_id": { "type": "string" },
                      "caption": { "type": "string" },
                      "user": {
                        "properties": {
                          "verified": { "type": "boolean" },
                          "suspended": { "type": "boolean" },
                          "_id": { "type": "string" },
                          "username": { "type": "string" },
                          "createdAt": { "type": "string" },
                          "__v": { "type": "number" }
                        },
                        "nullable": true,
                        "type": "object"
                      },
                      "audio_key": { "type": "string" },
                      "createdAt": { "type": "string" },
                      "__v": { "type": "number" },
                      "votes": {
                        "type": "object",
                        "properties": {
                          "upvoters": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "downvoters": { "type": "array", "items": {} },
                          "voteCounts": { "type": "number" },
                          "_id": { "type": "string" },
                          "post": { "type": "string" },
                          "createdAt": { "type": "string" },
                          "__v": { "type": "number" }
                        }
                      }
                    },
                    "required": [
                      "comments_count",
                      "_id",
                      "caption",
                      "user",
                      "audio_key",
                      "createdAt",
                      "__v",
                      "votes"
                    ]
                  }
                }
              }
            }
          },
          "304": { "description": "" }
        },
        "tags": ["Newsfeed"]
      }
    },
    "/posts/new": {
      "post": {
        "summary": "/posts/new",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "audio_file": {
                    "description": "The audio file to upload. Must be in mp3 format.",
                    "type": "string",
                    "format": "binary"
                  },
                  "caption": {
                    "description": "Caption of the post",
                    "type": "string"
                  }
                },
                "required": ["audio_file", "caption"]
              }
            }
          },
          "required": true,
          "x-s2o-overloaded": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comments_count": { "type": "number", "example": 0 },
                    "_id": {
                      "type": "string",
                      "example": "600d10bfea27206a4550fac8"
                    },
                    "caption": {
                      "type": "string",
                      "example": "rant about ECE"
                    },
                    "user": {
                      "type": "string",
                      "example": "6009a830d3d378157dcd4320"
                    },
                    "audio_key": {
                      "type": "string",
                      "example": "1611468989411.mp3"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-01-24T06:16:31.019Z"
                    },
                    "__v": { "type": "number", "example": 0 },
                    "votes": {
                      "type": "object",
                      "properties": {
                        "upvoters": {
                          "type": "array",
                          "items": { "type": "string" },
                          "example": ["6009a830d3d378157dcd4320"]
                        },
                        "downvoters": {
                          "type": "array",
                          "items": {},
                          "example": [null]
                        },
                        "voteCounts": { "type": "number", "example": 1 },
                        "_id": {
                          "type": "string",
                          "example": "600d10bfea27206a4550fac9"
                        },
                        "post": {
                          "type": "string",
                          "example": "600d10bfea27206a4550fac8"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2021-01-24T06:16:31.060Z"
                        },
                        "__v": { "type": "number", "example": 0 }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Only .mp3 file is allowed"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Post"],
        "security": [{ "authorization": [] }],
        "x-s2o-warning": "Operation post:/posts/new has multiple requestBodies"
      }
    },
    "/posts/audio/{audio_key}": {
      "get": {
        "summary": "/posts/audio/{audio_key}",
        "parameters": [
          {
            "name": "audio_key",
            "in": "path",
            "required": true,
            "description": "The audio_key of the post",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "type": "object",
            "content": {
              "*/*": {
                "schema": {
                  "properties": {
                    "audio_location": {
                      "type": "string",
                      "example": "https://audio-social-network.s3.us-east-2.amazonaws.com/1611466568998.mp3?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAI7KO3LWVULGZQIFA%2F20210125%2Fus-east-2%2Fs3%2Faws4_request&X-Amz-Date=20210125T032105Z&X-Amz-Expires=300&X-Amz-Signature=ca9ba5052332040af6475866478ebce7a3e2dfc9539898f91d94413ba5cb93d0&X-Amz-SignedHeaders=host"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Post"],
        "description": "Will return a signed URL which will expire after some time",
        "security": [{ "authorization": [] }]
      }
    },
    "/votes": {
      "post": {
        "summary": "/votes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "voteType": { "type": "string", "example": "down" },
                  "postId": {
                    "type": "string",
                    "description": "The id of the post you want to vote on"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Cast a vote on a post"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "msg": { "type": "string", "example": "voted" }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["Vote"],
        "description": "You can send either ‘up’ or ‘down’ or ‘’ to represent that the user removed his/her vote",
        "security": [{ "authorization": [] }]
      }
    }
  },
  "tags": [
    { "name": "Authentication" },
    { "name": "Profile" },
    { "name": "Post" },
    { "name": "Comment" },
    { "name": "Replies" },
    { "name": "Vote" },
    { "name": "Notification" }
  ],
  "servers": [
    {
      "url": "https://powerful-retreat-02063.herokuapp.com"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "securitySchemes": {
      "authorization": {
        "name": "authorization",
        "in": "header",
        "type": "apiKey"
      }
    },
    "schemas": {
      "User": {
        "title": "User",
        "required": ["username", "email"],
        "properties": {
          "username": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "hash": { "type": "string" },
          "salt": { "type": "string" },
          "verified": { "type": "boolean" },
          "suspended": { "type": "boolean" },
          "email": { "type": "string" },
          "img_location": { "type": "string" },
          "resetPasswordToken": { "type": "string" },
          "resetPasswordExpires": { "type": "string", "format": "date-time" },
          "_id": { "type": "string" }
        }
      },
      "Post": {
        "title": "Post",
        "required": ["user", "audio_key"],
        "properties": {
          "createdAt": { "type": "string", "format": "date-time" },
          "caption": { "type": "string" },
          "votes": { "type": "string" },
          "user": { "type": "string" },
          "comments_count": { "type": "number" },
          "audio_key": { "type": "string" },
          "_id": { "type": "string" },
          "audio_location": { "type": "string" },
          "location": { "type": "string" }
        }
      },
      "Vote": {
        "title": "Vote",
        "required": ["post"],
        "properties": {
          "createdAt": { "type": "string", "format": "date-time" },
          "post": { "type": "string" },
          "upvoters": { "type": "array", "items": { "type": "string" } },
          "downvoters": { "type": "array", "items": { "type": "string" } },
          "voteCounts": { "type": "number" },
          "_id": { "type": "string" }
        }
      }
    }
  }
}
